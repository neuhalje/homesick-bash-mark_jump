# vim : set ft=bash :
export MARKPATH=$HOME/.marks

function show_mark_help()
{
       echo "'mark nickname' -- mark cwd as 'nickname'"
       echo "'unmark nickname' -- remove 'nickname'"
       echo "'jump nickname' -- cd to 'nickname'"
       echo "'marks' -- show all nicknames"
}

function jump {
    if [ "$1" == "-h"  -o "$1" == "-?" ]
    then
      show_mark_help
      return
    fi

    cd -P "$MARKPATH/$1" 2>/dev/null || echo "No such mark: $1"
}
function mark {
    if [ "$1" == "-h"  -o "$1" == "-?" ]
    then
      show_mark_help
      return
    fi

    mkdir -p "$MARKPATH"; ln -s "$(pwd)" "$MARKPATH/$1"
}
function unmark {
    if [ "$1" == "-h"  -o "$1" == "-?" ]
    then
      show_mark_help
      return
    fi

    rm -i "$MARKPATH/$1"
}
function marks {
    if [ "$1" == "-h"  -o "$1" == "-?" ]
    then
      show_mark_help
      return
    fi

    if [ "$BASHRC_OS" == "darwin" ];
    then
       \ls -l "$MARKPATH" | tail -n +2 | sed 's/  / /g' | cut -d' ' -f9- | awk -F ' -> ' '{printf "%-10s -> %s\n", $1, $2}'
    else
       ls -l "$MARKPATH" | sed 's/  / /g' | cut -d' ' -f9- | sed 's/ -/\t-/g' && echo
    fi
}

_completemarks() {
  local curw=${COMP_WORDS[COMP_CWORD]}
  local wordlist=$(find $MARKPATH -type l -printf "%f\n")
  COMPREPLY=($(compgen -W '${wordlist[@]}' -- "$curw"))
  return 0
}

complete -F _completemarks jump unmark
